#!/usr/bin/env python

import os
import argparse
from netmiko import ConnectHandler

def read_file(fn):
   with open(fn) as f:
      result = f.read()
   return result.rstrip()

def cisco_ios(net_device, username, public_key, unset):
    ssh_conn = ConnectHandler(**net_device)
    public_key = [public_key[i:i+253] for i in range(0, len(public_key), 253)]
    commands_to_set = ['username {} privilege 15'.format(username),
                       'ip ssh pubkey-chain',
                       'username {}'.format(username),
                       'key-string'] + public_key + ['exit']
    commands_to_unset = ['no username {}'.format(username),
                         '\n'
                         'ip ssh pubkey-chain',
                         'no username {}'.format(username)]
    if not unset:
        ssh_conn.send_config_set(commands_to_set)
    else:
        ssh_conn.send_config_set(commands_to_unset)
    return 0

def arista():
    pass

def junos():
    pass

def dell_os9():
    pass

def comware():
    pass

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("ip", help="Device hostname or IP address")
    parser.add_argument("vendor", help="Device vendor(same as in netmiko)",
                         choices=['cisco_ios', 'arista_eos', 'juniper'])
    parser.add_argument("user", help="User for which to add SSH key")
    parser.add_argument("-P", "--port", default=22, help="SSH port (Default=22)", type=int)
    parser.add_argument("-i", default="/root/.ssh/id_rsa.pub", help="Path to public SSH key", dest='ssh_key')
    parser.add_argument("-u", help="Device admin username", dest='device_admin')
    parser.add_argument("-p", help="Device admin username", dest='device_pass')
    parser.add_argument("-r", "--remove", help="Remove SSH key", action="store_true")
    args = parser.parse_args()

    if not args.device_admin:
        device_admin = raw_input('Please enter device admin username: ')
    else:
        device_admin = device_admin

    if not args.device_pass:
        device_pass = raw_input('Please enter device admin password: ')
    else:
        device_pass = device_pass

    net_device = {
        'device_type': args.vendor,
        'ip': args.ip,
        'username': device_admin,
        'password': device_pass,
        'secret': device_pass,
        'port': args.port,
    }


    if args.vendor == 'cisco_ios':
        cisco_ios(net_device, args.user, read_file(args.ssh_key), args.remove)
